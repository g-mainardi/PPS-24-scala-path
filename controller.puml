@startuml ScalaPathController_Architecture
package "it.unibo.controller" {

    ' Main Controller Object
    class ScalaPathController <<object>> {
        +start(): Unit
        +assembleAgent(): Unit
        -resetSimulation(): Unit
        -step(): Unit
        -loop(previous: State): Unit
        -handleTransition(from: State, to: State): Unit
        -handleState(state: State): Unit
    }

    ' Core Traits
    interface DisplayableController <<trait>> {
    }

    interface SpeedManager <<trait>> {
    }

    interface AgentManager <<trait>> {
    }

    interface ViewManager <<trait>> {
    }

    ' Nested Traits in DisplayableController
    interface ScenarioManager <<trait>> {
    }

    interface AlgorithmManager <<trait>> {
    }

    interface DirectionManager <<trait>> {
    }

    ' Simulation Object
    class Simulation <<object>> {
        +current: State
        +set(s: State): Unit
        +exec(action: => Unit): Unit
    }

    ' Simulation States and Commands
    class ExecutionState <<enum>> {
    }

    class UICommand <<enum>> {
    }

    ' View Manager Inner Object
    class ViewObject {
        +update(): Unit
        +pause(): Unit
        +resume(): Unit
        +reset(): Unit
        +over(): Unit
    }

    ' Pattern Matching Objects
    class TransitionPatterns {
    }

    ' Relationships
    ScalaPathController ..|> DisplayableController
    ScalaPathController ..|> SpeedManager
    ScalaPathController ..|> ViewManager

    DisplayableController ..|> ScenarioManager
    DisplayableController ..|> AlgorithmManager
    DisplayableController ..|> DirectionManager
    DisplayableController ..|> AgentManager

    ScalaPathController --> Simulation : uses
    Simulation --> ExecutionState : contains
    Simulation --> UICommand : contains

    ViewManager --> ViewObject : contains
    ScalaPathController --> ViewObject : uses
    ScalaPathController --> TransitionPatterns : pattern matching

    ' Notes
    note right of ScalaPathController
        Main controller object that orchestrates
        the entire pathfinding simulation.
        Uses trait composition for modularity.
    end note

    note bottom of Simulation
        Global state manager using
        synchronized access and
        state machine pattern
    end note

    note left of ViewManager
        Generic view manager with
        type parameter V
        Uses Swing EDT for thread safety
    end note
}

@enduml