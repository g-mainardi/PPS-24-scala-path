@startuml ScalaPathController_Architecture
package "it.unibo.controller" {

    ' Main Controller Object
    class ScalaPathController <<object>> {
        +start(): Unit
        -resetSimulation(): Unit
        -step(): Unit
        -loop(previous: State): Unit
        -handleTransition(from: State, to: State): Unit
        -handleState(state: State): Unit
    }

    ' Core Traits
    interface DisplayableController <<trait>> {
    }

    interface SpeedManager <<trait>> {
    }


    interface ViewManager <<trait>> {
    }

    ' Simulation Object
    class Simulation <<object>> {
        +current: State
        +set(s: State): Unit
        +exec(action: => Unit): Unit
    }

    ' Simulation States and Commands
    interface State <<trait>> {
    }

    enum ExecutionState {
    }

    enum UICommand {
    }

    ' View Manager Inner Object
    class ViewObject {
        +update(): Unit
        +pause(): Unit
        +resume(): Unit
        +reset(): Unit
        +over(): Unit
    }

    ' Pattern Matching Objects
    class TransitionPatterns {
    }

    ' Relationships


    ExecutionState ..|> State
    UICommand ..|> State
    ScalaPathController --> Simulation : uses
    Simulation --> State : contains

    ViewManager --> ViewObject : contains
    ScalaPathController --> ViewObject : uses
    ScalaPathController --> TransitionPatterns : pattern matching


    ScalaPathController ..|> DisplayableController
    ScalaPathController ..|> SpeedManager
    ScalaPathController ..|> ViewManager
}

@enduml